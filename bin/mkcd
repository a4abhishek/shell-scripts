#!/usr/bin/env bash

# Ensure script stops on errors and propagates failures properly.
set -euo pipefail

# Source required libraries
SCRIPT_DIR="$(cd "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/../lib" && pwd)"
# shellcheck source=/dev/null
. "$SCRIPT_DIR/core.sh"

# Set script metadata
set_script_info \
    "Create a directory and change into it" \
    "mkcd <directory>" \
    "  # Create and enter a new directory
  mkcd new-project

  # Create and enter nested directories
  mkcd path/to/new/directory"

# Register required positional argument
register_required_positional 1 "Directory path to create and enter"

# Make directory and change into it
mkcd() {
    # Parse flags
    parse_flags "$@" || exit 1

    # Get directory from positional args
    local dir
    dir=$(get_positional_args | head -n1)

    # Create directory if it doesn't exist
    if [[ ! -d "$dir" ]]; then
        if ! mkdir -p "$dir"; then
            log_error "Failed to create directory: $dir"
            return 1
        fi
        log_debug "Created directory: $dir"
    fi

    # Change to directory
    if ! cd "$dir"; then
        log_error "Failed to change to directory: $dir"
        return 1
    fi

    log_debug "Changed to directory: $dir"
    return 0
}

# Main function
main() {
    mkcd "$@"
}

# Run main function
main "$@"
